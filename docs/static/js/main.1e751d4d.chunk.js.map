{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","result","json","data","gifs","map","img","id","title","image","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CC,UAAWH,GAFxD,sDAGEI,MAAOF,GAHT,cAGbG,EAHa,gBAIIA,EAAOC,OAJX,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAOH,EAAII,OAAOC,UAAUb,QAXjB,kBAeZM,GAfY,4CAAH,sDCCPQ,EAAc,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEjC,OACI,yBAAKI,UAAU,QACX,yBAAKC,IAAML,EAAQM,IAAMP,IACzB,+BAAMA,EAAN,OCHCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACrB,IAKGsB,EDrB0BK,CAAc3B,GAAlCc,EAFwB,EAE7BP,KAAac,EAFgB,EAEhBA,QAErB,OACI,oCACI,gCAAOrB,EAAP,KAEEqB,GAAW,sCAEb,yBAAKJ,UAAU,aAGPH,EAAOL,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIkB,IAAMlB,EAAIC,IACLD,UEhBpBmB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,UAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAM5B,EACNA,SAAWA,U,MCdvC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1e751d4d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); \r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category )=>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category ) }&api_key=ymSWNp5AmhzOnHwDe9Ta2FcYKINzJleD`;\r\n    const result = await fetch( url );\r\n    const { data } = await result.json();      \r\n    \r\n    const gifs = data.map( img => {\r\n    \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            image: img.images.downsized.url\r\n        }   \r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, image }) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ image } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['books']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}